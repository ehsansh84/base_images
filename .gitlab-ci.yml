stages:
  - build:mongobackup
  - build:pgbackup
pgbackup:
  stage: build:pgbackup
  image:
    name: registry.greenwebplus.com/public/docker-yq-git:1
  before_script:
    - export IMAGE_NAME=registry.greenwebplus.com/admin-kubernetes/postgresbackup:latest
    - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASSWORD" $REGISTRY
  script:
    - docker build -t registry.greenwebplus.com/admin-kubernetes/postgresbackup:latest -f DockerfilePostgresql .
    - docker push $IMAGE_NAME
  rules:
    - changes:
      - DockerfilePostgresql
mongobackup:
  stage: build:mongobackup
  image:
    name: registry.greenwebplus.com/public/docker-yq-git:1
  before_script:
    - docker build -t curl -f build-curl/DockerfileGCC .
    - export IMAGE_ID=$(docker create curl)
    - docker cp $IMAGE_ID:/root/curl/bin/curl .
    - export IMAGE_NAME=registry.greenwebplus.com/admin-kubernetes/mongodbbackup:latest
    - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASSWORD" $REGISTRY
  script:
    - docker build -t $IMAGE_NAME -f DockerfileMongo .
    - docker push $IMAGE_NAME
  rules:
    - changes:
      - DockerfileMongo
      - build-curl/DockerfileGCC
